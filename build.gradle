plugins {
    id 'java'
}

group = 'io.swagger.petstore'
version = '1.0'

wrapper {
    gradleVersion = '8.5'
}

repositories {
    mavenCentral()
}

ext {
    jacksonVer = "2.16.1"
    javaFakerVer = "1.0.2"
    restAssuredVer = "5.4.0"
    junitVer = "5.10.1"
    assertjVer = "3.25.1"
    lombokVer = "1.18.30"
    allureVer = "2.25.0"
    aspectJVer = "1.9.21"
}

configurations {
    agent {
        canBeResolved = true
        canBeConsumed = true
    }
}

dependencies {
    agent "org.aspectj:aspectjweaver:$aspectJVer"

    implementation(
            "com.fasterxml.jackson.core:jackson-databind:$jacksonVer",
            "com.github.javafaker:javafaker:$javaFakerVer",
            "io.rest-assured:rest-assured:$restAssuredVer",
            "org.assertj:assertj-core:$assertjVer",
            "io.qameta.allure:allure-bom:$allureVer",
            "io.qameta.allure:allure-junit5:$allureVer",
            "io.qameta.allure:allure-assertj:$allureVer"
    )

    testImplementation (
            "org.junit.jupiter:junit-jupiter-api:$junitVer",
            "org.junit.jupiter:junit-jupiter-engine:$junitVer",
            "org.junit.jupiter:junit-jupiter-params:$junitVer"
    )

    compileOnly "org.projectlombok:lombok:$lombokVer"
    annotationProcessor "org.projectlombok:lombok:$lombokVer"
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
    withJavadocJar()
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

jar {
    archiveBaseName = project.name
    version = project.version
}

test {
    useJUnitPlatform()
    jvmArgs = [ "-javaagent:${configurations.agent.singleFile}" ]
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
        showStandardStreams = true
        exceptionFormat = 'full'
    }
}